//have this up as placeholder right now, fixing up a lot of stuff in Eclipse


package Phishnet;

import java.io.File;
import java.util.Arrays;
import org.encog.engine.network.activation.*;
import org.encog.neural.networks.*;
import org.encog.neural.networks.layers.*;
import org.encog.neural.pattern.*;
import org.encog.ConsoleStatusReportable;
import org.encog.Encog;
import org.encog.bot.BotUtil;
import org.encog.ml.MLRegression;
import org.encog.ml.data.MLData;
import org.encog.ml.data.versatile.NormalizationHelper;
import org.encog.ml.data.versatile.VersatileMLDataSet;
import org.encog.ml.data.versatile.columns.ColumnDefinition;
import org.encog.ml.data.versatile.columns.ColumnType;
import org.encog.ml.data.versatile.sources.CSVDataSource;
import org.encog.ml.data.versatile.sources.VersatileDataSource;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.ml.model.EncogModel;
import org.encog.util.csv.CSVFormat;
import org.encog.util.csv.ReadCSV;
import org.encog.util.simple.EncogUtility;
import org.encog.ml.MLEncodable;
import org.encog.ml.MLMethod;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.persist.EncogDirectoryPersistence;

public class PhishNet {
	
	//Put the data here
	public File emails;
	
	//placeholder for datasource
	VersatileDataSource dbase = new CSVDataSource(emails, false, CSVFormat.DECIMAL_POINT);
	VersatileMLDataSet data = new VersatileMLDataSet(dbase);
	
	//method to set up the network
	public void nnsetup() {
		BasicNetwork mnetwork = new BasicNetwork(); 
		mnetwork.addLayer(new BasicLayer(null,true,5));
		mnetwork.addLayer(new BasicLayer(new ActivationSigmoid(), true, 8));
		mnetwork.addLayer(new BasicLayer(new ActivationSigmoid(), false, 1));
		mnetwork.getStructure().finalizeStructure();
		mnetwork.reset();
	}
	
}



// Code generated by Encog v3.4.0
// Generation Date: Tue Dec 07 21:56:19 CST 2021
// Generated code may be used freely
// http://www.heatonresearch.com/encog

//Generated code modified by Gabriela for purposes of connection to the project

public class TestNetwork1{
    public static final double[] WEIGHTS = {
        -7.4436040393,54.243373578,-0.3931029925,-303.5078506206,-3.2075557146,314.4525940665,0.7254612945,27.1313416139,-7.006108462,0.6320702314,
        0.107567781,-51.0850946947,-0.6202313646,8.7607491102,-56.4875081743,-0.641355852,311.1973153103,2.823108655,-322.5832284179,0.7653181344,
        -27.6895727889,5.536853067,0.8782333361,-0.5284913668,52.4834554144,-0.991525714,4.8990085407,1.4911410076,-2.8186710189,-0.1350050249,
        4211.0153738441,0.4846129474,4.5548560982,-10.1096258362,-0.6446413737,-2.8204339891,0.5903321183,-71600.1138652851,-0.1876420431,-3921.8630439955,
        -1.0023568945,-71607.0996723941,10.9415249813,-0.5639490202,0.4377493582,-2.7589673187,0.8196566982,0.5131288121,-7.9452754624,-0.2695049257,
        -0.777321572,-0.4840544711,0.0060431098,0.8290253274,-5.464037432,-6.9719292991,0.7126611639,8.8102462703,-0.2250509419,3.7373521623,
        -10.8963702291,0.2680655978,1.2288407967,196.6483423386,-5.9839243374,2.0081643517,549.8102822406,0.1008219314,1.7904613428,-14.043449754,
        0.844490763,-11.2189285583,-26.1720496857,0.2497085806,-2.680990473,19.8864806597,-1.6004413738,-21.8990350212,162.067081936,-0.4523482403,
        0.0748532864,-0.7660551299,-175.9957626771,0.7177369384,26.2056295155,0.2957899845,-170.4707249624,3.4308019955,0.9935039429,-43.3488733129,
        2.849815517,-2.4039259896,0.6023420421,-44.241989121,0.2909227699,-8.4173287734,360.944732232,0.3007230812,0.7252040049,0.2838477407,
        -1.4176169501,0.9418548041,7.1374747682,-0.4933295867,-0.2284487247,-8.3961839983,-0.5171844806,-0.6868271276,2.1478939455,-2.2999427755,
        0.9477269826,39.8074335449,0.5392670745,3.5241892766,12.0322195166,-0.7423943547,-0.7317421501,3.6152549787,678.6480227721,-1.0078849161,
        -11.2749613912,0.5986714833,-677.3248580003,1.9970593106,-0.6102761921,-8.6248726819,9.1083059503,-5.210007485,-8.823780767,16.4061442779,
        0.0025287015,2.2792295463,52.6495755551,-0.3009545166
    };

//This method creates an NN. The one it produces 
    public static MLMethod createNetwork() {
        MLMethodFactory methodFactory = new MLMethodFactory();
        MLMethod result = methodFactory.create("feedforward","8:B->SIGMOID->12:B->SIGMOID->2", 0, 0);
        ((MLEncodable)result).decodeFromArray(WEIGHTS);
        return result;
    }

    public static void main(String[] args) {

        MLMethod method = createNetwork();
        // Network and/or data is now loaded, you can add code to train, evaluate, etc.
    }
}

